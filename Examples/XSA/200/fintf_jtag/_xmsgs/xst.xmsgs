<?xml version="1.0" encoding="UTF-8"?>
<!-- IMPORTANT: This is an internal file that has been generated
     by the Xilinx ISE software.  Any direct editing or
     changes made to this file may result in unpredictable
     behavior or data corruption.  It is strongly advised that
     users do not edit the contents of this file. -->
<messages>
<msg type="warning" file="Xst" num="753" delta="unknown" >&quot;<arg fmt="%s" index="1">C:/xesscorp/PRODUCTS/BITSTREAMS/XSA/200/fintf_jtag/fintf_jtag.vhd</arg>&quot; line <arg fmt="%d" index="2">715</arg>: Unconnected output port &apos;<arg fmt="%s" index="3">status</arg>&apos; of component &apos;<arg fmt="%s" index="4">rwcntl</arg>&apos;.
</msg>

<msg type="info" file="Xst" num="1304" delta="unknown" >Contents of register &lt;<arg fmt="%s" index="1">blk_di_b</arg>&gt; in unit &lt;<arg fmt="%s" index="2">fintf_jtag</arg>&gt; never changes during circuit operation. The register is replaced by logic.
</msg>

<msg type="info" file="Xst" num="1304" delta="unknown" >Contents of register &lt;<arg fmt="%s" index="1">status</arg>&gt; in unit &lt;<arg fmt="%s" index="2">rwcntl</arg>&gt; never changes during circuit operation. The register is replaced by logic.
</msg>

<msg type="warning" file="Xst" num="646" delta="unknown" >Signal &lt;<arg fmt="%s" index="1">h_busy</arg>&gt; is assigned but never used.
</msg>

<msg type="warning" file="Xst" num="646" delta="unknown" >Signal &lt;<arg fmt="%s" index="1">wr_word&lt;0&gt;</arg>&gt; is assigned but never used.
</msg>

<msg type="warning" file="Xst" num="646" delta="unknown" >Signal &lt;<arg fmt="%s" index="1">rw_begun</arg>&gt; is assigned but never used.
</msg>

<msg type="info" file="Xst" num="2117" delta="unknown" >HDL ADVISOR - Mux Selector &lt;<arg fmt="%s" index="1">flash_state</arg>&gt; of Case statement line <arg fmt="%s" index="2">539</arg> was re-encoded using one-hot encoding. The case statement will be optimized (default statement optimization), but this optimization may lead to design initialization problems. To ensure the design works safely, you can:
	- add an &apos;<arg fmt="%s" index="3">INIT</arg>&apos; attribute on signal &lt;<arg fmt="%s" index="4">flash_state</arg>&gt; (optimization is then done without any risk)
	- use the attribute &apos;<arg fmt="%s" index="5">signal_encoding</arg> <arg fmt="%s" index="6">user</arg>&apos; to avoid onehot optimization
	- use the attribute &apos;<arg fmt="%s" index="7">safe_implementation</arg> <arg fmt="%s" index="8">yes</arg>&apos; to force XST to perform a safe (but less efficient) optimization
</msg>

<msg type="info" file="Xst" num="1767" delta="unknown" >HDL ADVISOR - Resource sharing has identified that some arithmetic operations in this design can share the same physical resources for reduced device utilization. For improved clock frequency you may try to disable resource sharing.
</msg>

<msg type="warning" file="Xst" num="1291" delta="unknown" >FF/Latch &lt;<arg fmt="%s" index="1">wr_word_0</arg>&gt; is unconnected in block &lt;<arg fmt="%s" index="2">fintf_jtag</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1291" delta="unknown" >FF/Latch &lt;<arg fmt="%s" index="1">begun</arg>&gt; is unconnected in block &lt;<arg fmt="%s" index="2">u_flash</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1988" delta="unknown" >Unit &lt;<arg fmt="%s" index="1">fintf_jtag</arg>&gt;: instances &lt;<arg fmt="%s" index="2">Mcompar__cmp_lt0003</arg>&gt;, &lt;<arg fmt="%s" index="3">Mcompar__cmp_ge0003</arg>&gt; of unit &lt;<arg fmt="%s" index="4">LPM_COMPARE_4</arg>&gt; and unit &lt;<arg fmt="%s" index="5">LPM_COMPARE_6</arg>&gt; are dual, second instance is removed
</msg>

<msg type="warning" file="Xst" num="1988" delta="unknown" >Unit &lt;<arg fmt="%s" index="1">fintf_jtag</arg>&gt;: instances &lt;<arg fmt="%s" index="2">Mcompar__cmp_ge0000</arg>&gt;, &lt;<arg fmt="%s" index="3">Mcompar__cmp_lt0007</arg>&gt; of unit &lt;<arg fmt="%s" index="4">LPM_COMPARE_5</arg>&gt; and unit &lt;<arg fmt="%s" index="5">LPM_COMPARE_7</arg>&gt; are dual, second instance is removed
</msg>

<msg type="warning" file="Xst" num="1988" delta="unknown" >Unit &lt;<arg fmt="%s" index="1">fintf_jtag</arg>&gt;: instances &lt;<arg fmt="%s" index="2">Mcompar__cmp_ge0001</arg>&gt;, &lt;<arg fmt="%s" index="3">Mcompar__cmp_lt0005</arg>&gt; of unit &lt;<arg fmt="%s" index="4">LPM_COMPARE_5</arg>&gt; and unit &lt;<arg fmt="%s" index="5">LPM_COMPARE_7</arg>&gt; are dual, second instance is removed
</msg>

<msg type="warning" file="Xst" num="1988" delta="unknown" >Unit &lt;<arg fmt="%s" index="1">fintf_jtag</arg>&gt;: instances &lt;<arg fmt="%s" index="2">Mcompar__cmp_ge0002</arg>&gt;, &lt;<arg fmt="%s" index="3">Mcompar__cmp_lt0004</arg>&gt; of unit &lt;<arg fmt="%s" index="4">LPM_COMPARE_5</arg>&gt; and unit &lt;<arg fmt="%s" index="5">LPM_COMPARE_7</arg>&gt; are dual, second instance is removed
</msg>

<msg type="warning" file="Xst" num="1988" delta="unknown" >Unit &lt;<arg fmt="%s" index="1">fintf_jtag</arg>&gt;: instances &lt;<arg fmt="%s" index="2">Mcompar__cmp_ge0004</arg>&gt;, &lt;<arg fmt="%s" index="3">Mcompar__cmp_lt0006</arg>&gt; of unit &lt;<arg fmt="%s" index="4">LPM_COMPARE_5</arg>&gt; and unit &lt;<arg fmt="%s" index="5">LPM_COMPARE_7</arg>&gt; are dual, second instance is removed
</msg>

<msg type="warning" file="Xst" num="1293" delta="unknown" >FF/Latch  &lt;<arg fmt="%s" index="1">rtn_flash_state_2</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">fintf_jtag</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1896" delta="unknown" >Due to other FF/Latch trimming, FF/Latch  &lt;<arg fmt="%s" index="1">rtn_flash_state_9</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">fintf_jtag</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1896" delta="unknown" >Due to other FF/Latch trimming, FF/Latch  &lt;<arg fmt="%s" index="1">rtn_flash_state_10</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">fintf_jtag</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1896" delta="unknown" >Due to other FF/Latch trimming, FF/Latch  &lt;<arg fmt="%s" index="1">rtn_flash_state_11</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">fintf_jtag</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1896" delta="unknown" >Due to other FF/Latch trimming, FF/Latch  &lt;<arg fmt="%s" index="1">rtn_flash_state_16</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">fintf_jtag</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1291" delta="unknown" >FF/Latch &lt;<arg fmt="%s" index="1">u_flash/begun</arg>&gt; is unconnected in block &lt;<arg fmt="%s" index="2">fintf_jtag</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1426" delta="unknown" >The value init of the FF/Latch <arg fmt="%s" index="1">rtn_flash_state_0</arg> hinder the constant cleaning in the block <arg fmt="%s" index="2">fintf_jtag</arg>.
You should achieve better results by setting this init to <arg fmt="%i" index="3">0</arg>.
</msg>

</messages>
